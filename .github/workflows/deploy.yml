name: Deploy Docker Container over SSH

on:
    push:
        branches:
            - master

env:
    APP_NAME: ${{ github.event.repository.name }}
    ROOT_DIR: /home/ubuntu/apps
    APP_DIR: "$ROOT_DIR/$APP_NAME"

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            # ========= # SECRET VALIDATIONS  # =========== #
            - name: VALIDATE SECRET (HOST)
              env:
                  SECRET_VALUE: ${{ secrets.HOST }}
              if: ${{ env.SECRET_VALUE == '' }}
              run: 'echo \"Missing Secret: HOST\"; exit 1'

            - name: VALIDATE SECRET (USERNAME)
              env:
                  SECRET_VALUE: ${{ secrets.USERNAME }}
              if: ${{ env.SECRET_VALUE == '' }}
              run: 'echo \"Missing Secret: USERNAME\"; exit 1'

            - name: VALIDATE SECRET (SSH_PASSWD)
              env:
                  SECRET_VALUE: ${{ secrets.SSH_PASSWD }}
              if: ${{ env.SECRET_VALUE == '' }}
              run: 'echo \"Missing Secret: SSH_PASSWD\"; exit 1'

            - name: VALIDATE SECRET (SSHKEY)
              env:
                  SECRET_VALUE: ${{ secrets.SSHKEY }}
              if: ${{ env.SECRET_VALUE == '' }}
              run: 'echo \"Missing Secret: SSHKEY\"; exit 1'

            - name: VALIDATE SECRET (PORT)
              env:
                  SECRET_VALUE: ${{ secrets.PORT }}
              if: ${{ env.SECRET_VALUE == '' }}
              run: 'echo \"Missing Secret: PORT\"; exit 1'

            # ========= # Start Build  # =========== #
            - name: Clone or Update repository
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSHKEY }}
                  password: ${{ secrets.SSH_PASSWD }}
                  port: ${{ secrets.PORT }}
                  passphrase: ""
                  script: |
                      if [ ! -d "$APP_DIR" ]; then
                        echo "Repository doesn't exist, cloning..."
                        cd $ROOT_DIR
                        git clone git@github.com:donis3/next-dockerized.git
                        cd $APP_DIR
                        docker compose up -d
                      else
                        echo "Repository already exists"
                        cd $APP_DIR
                        docker-compose down
                        git pull
                        docker compose up -d
                      fi

            - name: Docker Cleanup
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSHKEY }}
                  password: ${{ secrets.SSH_PASSWD }}
                  port: ${{ secrets.PORT }}
                  passphrase: ""
                  script: docker system prune -af
